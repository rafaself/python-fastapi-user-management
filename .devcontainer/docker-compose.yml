services:
  postgres:
    image: postgres:latest
    container_name: fastapi-postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=paneas
      - POSTGRES_DB=main
    ports:
      - "5432:5432"
    volumes:
      - myvolume:/var/lib/postgresql/data


  rabbitmq:
    image: rabbitmq
    ports:
      - 5672:5672
    container_name: fastapi-rabbitmq


  app:
    image: paneas
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspaces:cached
    container_name: fastapi-app
    ports:
      - "8000:8000"
    command: >
      bash -c "
        export PYTHONPATH=/app/src:$PYTHONPATH &&
        sleep 5 &&
        poetry run alembic upgrade head &&
        psql -U admin -d main -h postgres -f populate_database.sql &&
        while sleep 1000; do :; done
      "

volumes:
  myvolume:


# version: '3.8'
# services:
# # Update this to the name of the service you want to work with in your docker-compose.yml file
# app:
#   # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer 
#   # folder. Note that the path of the Dockerfile and context is relative to the *primary* 
#   # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
#   # array). The sample below assumes your primary file is in the root of your project.
#   #
#   # build:
#   #   context: .
#   #   dockerfile: .devcontainer/Dockerfile

#   volumes:
#     # Update this to wherever you want VS Code to mount the folder of your project
#     - ..:/workspaces:cached

#   # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
#   # cap_add:
#   #   - SYS_PTRACE
#   # security_opt:
#   #   - seccomp:unconfined

#   # Overrides default command so things don't shut down after the process ends.
#   command: /bin/sh -c "while sleep 1000; do :; done"

